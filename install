#!/bin/bash

set -e
set -u

r=`tput setaf 1`
g=`tput setaf 2`
l=`tput setaf 4`
m=`tput setaf 5`
x=`tput sgr0`
b=`tput bold`

# Don't change | No trailing slash
projname="magnetico-installer"
sourcedir=/root/$projname
basedir=/root/openspace42
installdir=$basedir/magnetico

scriptname=`basename "$0"`
hostname=`hostname`

echo
echo "${b}Now initiating installer...${x}"
echo

if [[ $EUID -ne 0 ]]
then
	echo "${r}${b}This script must be run as root. Run it as:${x}"
	echo
	echo "${b}sudo bash $sourcedir/$scriptname${x}"
	echo
	echo "${b}Exiting...${x}"
	echo
	exit
fi

if [ -f $basedir/DFBS/run-ok ]
then
        echo "${g}${b}Debian First Boot Setup was previously run successfully. Continuing...${x}"
        echo
else
	echo "${r}${b}Debian First Boot Setup was NOT previously run successfully OR the system was not rebooted at the end.${x}"
	echo
	read -p "${b}Run it now? (Y/n): ${x}" -n 1 -r
	echo
	if [[ ! $REPLY =~ ^[Nn]$ ]]
	then
		echo "${b}Ok, running DFBS now...${x}"
		echo
		echo "${b}After you're done running DFBS [make sure you reboot this machine at the end], simply run the installer again.${x}"
		echo
		sleep 3
		if [ -d "/root/Debian-First-Boot-Setup" ]
		then
			rm -r "/root/Debian-First-Boot-Setup"
		fi
		git clone https://github.com/openspace42/Debian-First-Boot-Setup
		clear
		bash Debian-First-Boot-Setup/script.sh
		exit
	else
		echo "${b}No problem, you can run it [make sure you reboot this machine at the end] by executing the following commands:${x}"
		echo
		echo "${b} | git clone https://github.com/openspace42/Debian-First-Boot-Setup |${x}"
		echo
		echo "${b} | bash Debian-First-Boot-Setup/script.sh |${x}"
		echo
		echo "${b}Exiting...${x}"
		echo
		exit
	fi
fi

################################################################################



echo "${b}Magnetico must run as a different user than root.${x}"
echo
echo "${b}Here are the current non-root full users in this system:${x}"
echo
currusers="$(cat /etc/passwd | cut -d: -f 1,3,6 | grep "[1-9][0-9][0-9][0-9]" | grep "/home" | cut -d: -f1)"
echo $currusers
echo
read -p "${b}Use an existing user? (Y/n): ${x}" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Nn]$ ]]
then
	defined=n
	until [ $defined = "y" ]
	do
		exists=n
		until [ $exists = "y" ]
		do
			runtimeuser=""
			until [ ! $runtimeuser = "" ]
			do
				read -p "${b}Ok, now specify the existing user under whom to install magnetico: ${x}" runtimeuser
				echo
			done
			if [ -d /home/$runtimeuser ]
			then
				exists=y
			else
				echo "${r}${b}The specified user does not exist or is not a full user with home directory. Please retry...${x}"
				echo
				exists=n
			fi
		done
		valid=n
		until [ $valid = "y" ]
		do
			read -n 1 -p "${b}Is | $runtimeuser | correct? (Y/n/e[xit]) ${x}" answer;
			case $answer in
			"")
				echo
				valid=y
				defined=y
				;;
			y)
				echo -e "\n"
				valid=y
				defined=y
				;;
			n)
				echo -e "\n"
				echo "${b}Ok, then please try again...${x}"
				echo
				valid=y
				defined=n
				;;
			e)
				echo -e "\n"
	        		echo "${b}Exiting...${x}"
	        		echo
	        		exit
	        		;;
			*)
				echo -e "\n"
				echo "${r}${b}Invalid option. Retry...${x}"
	        		echo
				valid=n
			defined=n
		        ;;
			esac
		done
	done
else
	echo
	defined=n
	until [ $defined = "y" ]
	do
		runtimeuser=""
		until [ ! $runtimeuser = "" ]
		do
			read -p "${b}Ok, adding user now. Specify the new user's username: ${x}" runtimeuser
			echo
		done
		valid=n
		until [ $valid = "y" ]
		do
			read -n 1 -p "${b}Is | $runtimeuser | correct? (Y/n/e[xit]) ${x}" answer;
			case $answer in
			"")
				echo
				valid=y
				defined=y
				;;
			y)
				echo -e "\n"
				valid=y
				defined=y
				;;
			n)
				echo -e "\n"
				echo "${b}Ok, then please try again...${x}"
				echo
				valid=y
				defined=n
				;;
			e)
				echo -e "\n"
	        		echo "${b}Exiting...${x}"
	        		echo
	        		exit
	        		;;
			*)
				echo -e "\n"
				echo "${r}${b}Invalid option. Retry...${x}"
	        		echo
				valid=n
			defined=n
		        ;;
			esac
		done
	done
	adduser --disabled-password --gecos "" $runtimeuser
	usermod -aG sudo $runtimeuser
fi



echo "${b}Now installing dependencies...${x}"
echo
apt-get update
apt-get -y install python-boto python3-pip ufw fail2ban pwgen
pip3 install --upgrade pip
pip3 install boto
echo
echo "${b}Finished installing dependencies.${x}"
echo



echo "${b}Now setting UFW rules...${x}"
echo
ufw allow 8080
ufw allow 64879
echo
echo "${b}Finished setting UFW rules.${x}"
echo



echo "${b}Now installing magneticod...${x}"
echo

iptables -I OUTPUT -t raw -p udp --sport 64879 -j NOTRACK
iptables -I PREROUTING -t raw -p udp --dport 64879 -j NOTRACK

su - $runtimeuser <<'EOF'
pip3 install magneticod --user
export PATH=$PATH:~/.local/bin
source ~/.profile
EOF

wget https://raw.githubusercontent.com/boramalper/magnetico/master/magneticod/systemd/magneticod.service
sed -i "s|ExecStart=~/|ExecStart=/home/${runtimeuser}/|g" magneticod.service
sed -i "s|PORT_NUMBER|64879|g" magneticod.service
sed -i "/\[Service\]/a User=${runtimeuser}" magneticod.service

mv magneticod.service /etc/systemd/system/
systemctl daemon-reload
systemctl start magneticod
systemctl enable magneticod
/usr/sbin/service magneticod restart

echo "${b}Finished installing magneticod.${x}"
echo



echo "${b}Now installing magneticow...${x}"
echo

su - $runtimeuser <<'EOF'
pip3 install magneticow --user
export PATH=$PATH:~/.local/bin
source ~/.profile
EOF

wget https://raw.githubusercontent.com/boramalper/magnetico/master/magneticow/systemd/magneticow.service
sed -i "s|ExecStart=~/|ExecStart=/home/${runtimeuser}/|g" magneticow.service
sed -i "s|PORT|8080|g" magneticow.service
sed -i "s|USERNAME|${runtimeuser}|g" magneticow.service
genpw="$(pwgen -s 42 1)"
sed -i "s|PASSWORD|\"${genpw}\"|g" magneticow.service
sed -i "/\[Service\]/a User=${runtimeuser}" magneticow.service

mv magneticow.service /etc/systemd/system/
systemctl daemon-reload
systemctl start magneticow
systemctl enable magneticow
/usr/sbin/service magneticow restart

echo "${b}Finished installing magneticow.${x}"
echo



echo "${b}Now adding magneticod restart script to daily crontab...${x}"
echo
touch /etc/cron.daily/magneticod-restart
chmod 755 /etc/cron.daily/magneticod-restart
echo -e '#!/bin/bash' > /etc/cron.daily/magneticod-restart
echo >> /etc/cron.daily/magneticod-restart
echo "/usr/sbin/service magneticod restart" >> /etc/cron.daily/magneticod-restart
echo "${b}Finished adding magneticod restart script to daily crontab...${x}"
echo



if [ -f /etc/nginx/sites-available/streisand ]
then
	echo "${g}${b}Streisand instance detected.${x}"
	echo
	read -p "${b}Also override the | $hostname | site pointing it to magneticow when accessing it from inside the VPN? (Y/n): ${x}" -n 1 -r
	echo
	if [[ ! $REPLY =~ ^[Nn]$ ]]
	then
		echo "${b}Ok, proceeding...${x}"
		echo
		cp /etc/nginx/sites-available/streisand /etc/nginx/sites-available/magnetico
		sed -i "s|127.0.0.1|10.8.0.1|g" /etc/nginx/sites-available/magnetico
		sed -i "/auth_basic/d" /etc/nginx/sites-available/magnetico
		sed -i "/autoindex off;/ r $sourcedir/magnetico-nginx-append" /etc/nginx/sites-available/magnetico
		if [ -f /etc/nginx/sites-enabled/magnetico ]
		then
			rm /etc/nginx/sites-enabled/magnetico
		fi
		ln -s /etc/nginx/sites-available/magnetico /etc/nginx/sites-enabled/magnetico
		service nginx restart
		echo "host-record=$hostname,10.8.0.1" > /etc/dnsmasq.d/magnetico
		service dnsmasq restart
		ufw delete allow 8080
		echo
		echo "${b}Finished overriding the | $hostname | site.${x}"
		echo
		echo "${g}${b}You can now log in on:${x}"
		echo
		echo "${b}  https://$hostname [when connected via VPN to this machine]${x}"
		echo
		echo "${b}  |  user: $runtimeuser${x}"
		echo
		echo "${b}  |  pass: $genpw${x}"
		echo
		read -p "${b}Also exessively harden this machine by removing the public streisand web interface entirely and the Tor hidden service? (Y/n): ${x}" -n 1 -r
		echo
		if [[ ! $REPLY =~ ^[Nn]$ ]]
		then
			echo "${b}Ok, proceeding...${x}"
			echo
			if [ -f /etc/nginx/sites-enabled/streisand ]
			then
				rm /etc/nginx/sites-enabled/streisand
			fi
			if [ -f /etc/nginx/sites-enabled/streisand-hidden-service ]
			then
				rm /etc/nginx/sites-enabled/streisand-hidden-service
			fi
			service nginx reload
			echo "${b}Finished hardening this machine. You can now only access it via SSH or VPN.${x}"
			echo
		else
			echo "${b}Ok, skipping.${x}"
			echo
		fi
	else
		echo "${b}Ok, skipping. All done!${x}"
		echo
		echo "${g}${b}You can now log in on:${x}"
		echo
		echo "${b}  http://$hostname:8080${x}"
		echo
		echo "${b}  |  user: $runtimeuser${x}"
		echo
		echo "${b}  |  pass: $genpw${x}"
		echo
	fi
else
	echo "${b}All done!${x}"
	echo
	echo "${g}${b}You can now log in on:${x}"
	echo
	echo "${b}  http://$hostname:8080${x}"
	echo
	echo "${b}  |  user: $runtimeuser${x}"
	echo
	echo "${b}  |  pass: $genpw${x}"
	echo
fi



echo "${b}Now removing installer directory...${x}"
echo
echo "Run ${b}git clone https://github.com/openspace42/magnetico-installer${x} once again to download the latest installer!"
echo
rm -r $sourcedir
echo "${b}Finished removing installer directory...${x}"
echo



echo "${b}Finished installing. Exiting installer...${x}"
echo
